version: '3.9'

services:
  next:
    image: node:slim
    restart: always
    volumes:
      - ./frontend:/app
    working_dir: /app
    command: npm run build && npm run start

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
  
  fastapi:
    image: python:3.11
    restart: always
    volumes:
      - ./backend:/app
    working_dir: /app
    command: bash -c "pip install -r requirements-docker.txt && uvicorn main:app --reload --host 0.0.0.0"
  

  nginx_80:
    image: nginx:1.21.4
    hostname: nginx
    restart: always
    volumes:
      - ./server/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./server/certbot/conf:/etc/letsencrypt
      - ./server/certbot/www:/var/www/certbot 
    ports:
      - 80:80

  nginx_443:
    image: nginx:1.21.4
    hostname: nginx
    restart: always
    volumes:
      - ./server/nginx/conf.d/production.conf:/etc/nginx/conf.d/default.conf
      - ./server/nginx/uwsgi_params:/etc/nginx/uwsgi_params
      - ./server/certbot/conf:/etc/letsencrypt
      - ./server/certbot/www:/var/www/certbot 
      - static:/django_static
    ports:
      - 443:443
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./server/certbot/conf:/etc/letsencrypt
      - ./server/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  
  
volumes:
  static: {}
